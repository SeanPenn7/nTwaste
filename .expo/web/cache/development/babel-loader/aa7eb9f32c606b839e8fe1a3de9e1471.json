{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { Text } from \"react-native-rapi-ui\";\nimport AppNavigator from \"./src/navigation/AppNavigator\";\nimport { AuthProvider } from \"./src/provider/AuthProvider\";\nimport { ThemeProvider } from \"react-native-rapi-ui\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport Home from \"./src/screens/Home\";\nimport SecondScreen from \"./src/screens/SecondScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\nexport default function App(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setIsLoading = _React$useState2[1];\n\n  var images = [require(\"./assets/icon.png\"), require(\"./assets/splash.png\"), require(\"./assets/login.png\"), require(\"./assets/register.png\"), require(\"./assets/forget.png\")];\n  return _jsx(ThemeProvider, {\n    images: images,\n    children: _jsx(AuthProvider, {\n      children: _jsx(AppNavigator, {})\n    })\n  });\n}","map":{"version":3,"names":["React","Text","AppNavigator","AuthProvider","ThemeProvider","SplashScreen","NavigationContainer","createMaterialTopTabNavigator","Home","SecondScreen","Tab","App","props","useState","isLoading","setIsLoading","images","require"],"sources":["C:/Users/MM/OneDrive/Desktop/Project/enkun/final-project/shenphen/nTwaste/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { Text } from \"react-native-rapi-ui\";\r\nimport AppNavigator from \"./src/navigation/AppNavigator\";\r\nimport { AuthProvider } from \"./src/provider/AuthProvider\";\r\nimport { ThemeProvider } from \"react-native-rapi-ui\";\r\nimport { LogBox } from \"react-native\";\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport Home from \"./src/screens/Home\";\r\nimport SecondScreen from \"./src/screens/SecondScreen\";\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\nexport default function App(props) {\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n\r\n\r\n  const images = [\r\n    require(\"./assets/icon.png\"),\r\n    require(\"./assets/splash.png\"),\r\n    require(\"./assets/login.png\"),\r\n    require(\"./assets/register.png\"),\r\n    require(\"./assets/forget.png\"),\r\n  ];\r\n\r\n  // React.useEffect(() => {\r\n  //   async function prepare() {\r\n  //     try {\r\n  //       // keeps the splash screen visible while assets are cached\r\n  //       await SplashScreen.preventAutoHideAsync();\r\n\r\n  //       // pre-load/cache assets: images, fonts, and videos\r\n  //       await func.loadAssetsAsync();\r\n  //     } catch (e) {\r\n  //       // console.warn(e);\r\n  //     } finally {\r\n  //       // loading is complete\r\n  //       setIsLoading(false);\r\n  //     }\r\n  //   }\r\n\r\n  //   prepare();\r\n  // }, []);\r\n\r\n  // React.useEffect(() => {\r\n  //   // when loading is complete\r\n  //   if (isLoading === false) {\r\n  //     // hide splash function\r\n  //     const hideSplash = async () => SplashScreen.hideAsync();\r\n\r\n  //     // hide splash screen to show app\r\n  //     hideSplash();\r\n  //   }\r\n  // }, [isLoading]);\r\n\r\n  // if (isLoading) {\r\n  //   return null;\r\n  // }\r\n\r\n  // // Ignore firebase v9 AsyncStorage warning\r\n  // React.useEffect(() => {\r\n  //   LogBox.ignoreLogs([\r\n  //     \"AsyncStorage has been extracted from react-native core and will be removed in a future release. It can now be installed and imported from '@react-native-async-storage/async-storage' instead of 'react-native'. See https://github.com/react-native-async-storage/async-storage\",\r\n  //   ]);\r\n  // }, []);\r\n\r\n  return (\r\n    <ThemeProvider images={images}>\r\n      <AuthProvider>\r\n        <AppNavigator />\r\n      </AuthProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,OAAOC,YAAP;AACA,SAASC,YAAT;AACA,SAASC,aAAT,QAA8B,sBAA9B;;AAEA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,6BAAT,QAA8C,qCAA9C;AACA,OAAOC,IAAP;AACA,OAAOC,YAAP;;AAEA,IAAMC,GAAG,GAAGH,6BAA6B,EAAzC;AAEA,eAAe,SAASI,GAAT,CAAaC,KAAb,EAAoB;EACjC,sBAAkCZ,KAAK,CAACa,QAAN,CAAe,IAAf,CAAlC;EAAA;EAAA,IAAOC,SAAP;EAAA,IAAkBC,YAAlB;;EAGA,IAAMC,MAAM,GAAG,CACbC,OAAO,qBADM,EAEbA,OAAO,uBAFM,EAGbA,OAAO,sBAHM,EAIbA,OAAO,yBAJM,EAKbA,OAAO,uBALM,CAAf;EAiDA,OACE,KAAC,aAAD;IAAe,MAAM,EAAED,MAAvB;IAAA,UACE,KAAC,YAAD;MAAA,UACE,KAAC,YAAD;IADF;EADF,EADF;AAOD"},"metadata":{},"sourceType":"module"}