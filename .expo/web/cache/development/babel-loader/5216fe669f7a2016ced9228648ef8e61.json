{"ast":null,"code":"import React, { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { Layout, Text, TextInput, Button, useTheme, themeColor } from \"react-native-rapi-ui\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(KeyboardAvoidingView, {\n    behavior: \"height\",\n    enabled: true,\n    style: {\n      flex: 1\n    },\n    children: _jsx(Layout, {\n      children: _jsxs(ScrollView, {\n        contentContainerStyle: {\n          flexGrow: 1\n        },\n        children: [_jsx(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: isDarkmode ? \"#17171E\" : themeColor.white100\n          },\n          children: _jsx(Image, {\n            resizeMode: \"contain\",\n            style: {\n              height: 220,\n              width: 220\n            },\n            source: require(\"../../../assets/splash.png\")\n          })\n        }), _jsxs(View, {\n          style: {\n            flex: 3,\n            paddingHorizontal: 20,\n            paddingBottom: 20,\n            backgroundColor: isDarkmode ? themeColor.dark : themeColor.white\n          },\n          children: [_jsx(Text, {\n            fontWeight: \"bold\",\n            style: {\n              alignSelf: \"center\",\n              padding: 30\n            },\n            size: \"h3\",\n            children: \"Login\"\n          }), _jsx(Text, {\n            children: \"Email\"\n          }), _jsx(TextInput, {\n            containerStyle: {\n              marginTop: 15\n            },\n            placeholder: \"Enter your email\",\n            value: email,\n            autoCapitalize: \"none\",\n            autoCompleteType: \"off\",\n            autoCorrect: false,\n            keyboardType: \"email-address\",\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            }\n          }), _jsx(Text, {\n            style: {\n              marginTop: 15\n            },\n            children: \"Password\"\n          }), _jsx(TextInput, {\n            containerStyle: {\n              marginTop: 15\n            },\n            placeholder: \"Enter your password\",\n            value: password,\n            autoCapitalize: \"none\",\n            autoCompleteType: \"off\",\n            autoCorrect: false,\n            secureTextEntry: true,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            }\n          }), _jsx(Button, {\n            text: loading ? \"Loading\" : \"Continue\",\n            onPress: function onPress() {\n              login();\n            },\n            style: {\n              marginTop: 20\n            },\n            disabled: loading\n          }), _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              marginTop: 15,\n              justifyContent: \"center\"\n            },\n            children: [_jsx(Text, {\n              size: \"md\",\n              children: \"Don't have an account?\"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                navigation.navigate(\"Register\");\n              },\n              children: _jsx(Text, {\n                size: \"md\",\n                fontWeight: \"bold\",\n                style: {\n                  marginLeft: 5\n                },\n                children: \"Register here\"\n              })\n            })]\n          }), _jsx(View, {\n            style: {\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              marginTop: 10,\n              justifyContent: \"center\"\n            },\n            children: _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                navigation.navigate(\"ForgetPassword\");\n              },\n              children: _jsx(Text, {\n                size: \"md\",\n                fontWeight: \"bold\",\n                children: \"Forget password\"\n              })\n            })\n          }), _jsx(View, {\n            style: {\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              marginTop: 30,\n              justifyContent: \"center\"\n            },\n            children: _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                isDarkmode ? setTheme(\"light\") : setTheme(\"dark\");\n              },\n              children: _jsx(Text, {\n                size: \"md\",\n                fontWeight: \"bold\",\n                style: {\n                  marginLeft: 5\n                },\n                children: isDarkmode ? \"‚òÄÔ∏è light theme\" : \"üåë dark theme\"\n              })\n            })\n          })]\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","getAuth","signInWithEmailAndPassword","Layout","Text","TextInput","Button","useTheme","themeColor","navigation","flex","flexGrow","justifyContent","alignItems","backgroundColor","isDarkmode","white100","height","width","require","paddingHorizontal","paddingBottom","dark","white","alignSelf","padding","marginTop","email","text","setEmail","password","setPassword","loading","login","flexDirection","navigate","marginLeft","setTheme"],"sources":["C:/Users/MM/OneDrive/Desktop/Project/enkun/final-project/shenphen/nTwaste/src/screens/auth/Landing.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  View,\r\n  KeyboardAvoidingView,\r\n  Image,\r\n} from \"react-native\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport {\r\n  Layout,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  useTheme,\r\n  themeColor,\r\n} from \"react-native-rapi-ui\";\r\n\r\nexport default function ({ navigation }) {\r\n\r\n\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"height\" enabled style={{ flex: 1 }}>\r\n      <Layout>\r\n        <ScrollView\r\n          contentContainerStyle={{\r\n            flexGrow: 1,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: isDarkmode ? \"#17171E\" : themeColor.white100,\r\n            }}\r\n          >\r\n            <Image\r\n              resizeMode=\"contain\"\r\n              style={{\r\n                height: 220,\r\n                width: 220,\r\n              }}\r\n              source={require(\"../../../assets/splash.png\")}\r\n            />\r\n          </View>\r\n          <View\r\n            style={{\r\n              flex: 3,\r\n              paddingHorizontal: 20,\r\n              paddingBottom: 20,\r\n              backgroundColor: isDarkmode ? themeColor.dark : themeColor.white,\r\n            }}\r\n          >\r\n            <Text\r\n              fontWeight=\"bold\"\r\n              style={{\r\n                alignSelf: \"center\",\r\n                padding: 30,\r\n              }}\r\n              size=\"h3\"\r\n            >\r\n              Login\r\n            </Text>\r\n            <Text>Email</Text>\r\n            <TextInput\r\n              containerStyle={{ marginTop: 15 }}\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              autoCapitalize=\"none\"\r\n              autoCompleteType=\"off\"\r\n              autoCorrect={false}\r\n              keyboardType=\"email-address\"\r\n              onChangeText={(text) => setEmail(text)}\r\n            />\r\n\r\n            <Text style={{ marginTop: 15 }}>Password</Text>\r\n            <TextInput\r\n              containerStyle={{ marginTop: 15 }}\r\n              placeholder=\"Enter your password\"\r\n              value={password}\r\n              autoCapitalize=\"none\"\r\n              autoCompleteType=\"off\"\r\n              autoCorrect={false}\r\n              secureTextEntry={true}\r\n              onChangeText={(text) => setPassword(text)}\r\n            />\r\n            <Button\r\n              text={loading ? \"Loading\" : \"Continue\"}\r\n              onPress={() => {\r\n                login();\r\n              }}\r\n              style={{\r\n                marginTop: 20,\r\n              }}\r\n              disabled={loading}\r\n            />\r\n\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginTop: 15,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Text size=\"md\">Don't have an account?</Text>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  navigation.navigate(\"Register\");\r\n                }}\r\n              >\r\n                <Text\r\n                  size=\"md\"\r\n                  fontWeight=\"bold\"\r\n                  style={{\r\n                    marginLeft: 5,\r\n                  }}\r\n                >\r\n                  Register here\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  navigation.navigate(\"ForgetPassword\");\r\n                }}\r\n              >\r\n                <Text size=\"md\" fontWeight=\"bold\">\r\n                  Forget password\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginTop: 30,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  isDarkmode ? setTheme(\"light\") : setTheme(\"dark\");\r\n                }}\r\n              >\r\n                <Text\r\n                  size=\"md\"\r\n                  fontWeight=\"bold\"\r\n                  style={{\r\n                    marginLeft: 5,\r\n                  }}\r\n                >\r\n                  {isDarkmode ? \"‚òÄÔ∏è light theme\" : \"üåë dark theme\"}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </Layout>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}