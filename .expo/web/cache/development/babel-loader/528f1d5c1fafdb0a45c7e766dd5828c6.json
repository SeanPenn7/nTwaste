{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { Component } from 'react';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport * as Google from 'expo-google-app-auth';\nimport * as WebBrowser from 'expo-web-browser';\nimport { GoogleSignin } from '@react-native-google-signin/google-signin';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AppButton = function AppButton(_ref) {\n  var onPress = _ref.onPress,\n      icon = _ref.icon,\n      title = _ref.title,\n      backgroundColor = _ref.backgroundColor,\n      styleBack = _ref.styleBack;\n  return _jsx(View, {\n    style: styles.appButtonContainer,\n    children: _jsx(Icon.Button, {\n      name: icon,\n      backgroundColor: backgroundColor,\n      onPress: onPress,\n      style: styleBack,\n      children: _jsx(Text, {\n        style: styles.appButtonText,\n        children: title\n      })\n    })\n  });\n};\n\nexport default function (_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      accessToken = _React$useState2[0],\n      setAccessToken = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      userInfo = _React$useState4[0],\n      setUserInfo = _React$useState4[1];\n\n  function signInWithGoogle() {\n    var result;\n    return _regeneratorRuntime.async(function signInWithGoogle$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Google.logInAsync({\n              webClientId: '227196084425-5e8po5oe7uoa5dk4staia1dgukmp58eq.apps.googleusercontent.com',\n              iosClient: '',\n              scopes: ['profile', 'email']\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (result.type === \"success\") {\n              setAccessToken(accessToken);\n            } else {\n              console.log(\"Permission denied\");\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  function getUserData() {\n    return _regeneratorRuntime.async(function getUserData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function showUserInfo() {}\n\n  return _jsx(View, {\n    style: {\n      marginTop: 80\n    },\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(Image, {\n        resizeMode: \"contain\",\n        style: {\n          height: 250,\n          width: 290\n        },\n        source: require(\"../../../assets/splash.png\")\n      }), _jsxs(View, {\n        style: styles.screenContainer,\n        children: [_jsx(AppButton, {\n          icon: \"sign-in\",\n          title: \"Continue with Email\",\n          backgroundColor: \"#777\",\n          styleBack: styles.appButton,\n          onPress: function onPress() {\n            navigation.navigate(\"Register\");\n          }\n        }), _jsx(AppButton, {\n          icon: \"facebook\",\n          title: \"Continue with Facebook\",\n          backgroundColor: \"#3b5998\",\n          styleBack: styles.appButton2,\n          onPress: function onPress() {\n            navigation.navigate(\"Register\");\n          }\n        }), _jsx(AppButton, {\n          icon: \"google\",\n          title: \"Continue with Google\",\n          styleBack: styles.appButton3,\n          backgroundColor: \"#14191e\",\n          onPress: accessToken ? getUserData : signInWithGoogle\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 120\n  },\n  appButton: {\n    padding: 16,\n    paddingLeft: 70,\n    paddingRight: 70,\n    borderRadius: 20\n  },\n  appButton2: {\n    padding: 16,\n    paddingLeft: 60,\n    paddingRight: 60,\n    borderRadius: 20\n  },\n  appButton3: {\n    padding: 16,\n    paddingLeft: 65,\n    paddingRight: 65,\n    borderRadius: 20\n  },\n  appButtonText: {\n    fontSize: 15,\n    color: 'white'\n  },\n  appButtonContainer: {\n    paddingVertical: 10,\n    paddingHorizontal: 26\n  }\n});","map":{"version":3,"names":["React","Component","Icon","Google","WebBrowser","GoogleSignin","AppButton","onPress","icon","title","backgroundColor","styleBack","styles","appButtonContainer","appButtonText","navigation","useState","accessToken","setAccessToken","userInfo","setUserInfo","signInWithGoogle","logInAsync","webClientId","iosClient","scopes","result","type","console","log","getUserData","showUserInfo","marginTop","flex","justifyContent","alignItems","height","width","require","screenContainer","appButton","navigate","appButton2","appButton3","StyleSheet","create","padding","paddingLeft","paddingRight","borderRadius","fontSize","color","paddingVertical","paddingHorizontal"],"sources":["C:/Users/MM/OneDrive/Desktop/Project/enkun/final-project/shenphen/nTwaste/src/screens/auth/Landing.js"],"sourcesContent":["import { Text, View, StyleSheet, Image, Button } from 'react-native'\r\nimport React, { Component } from 'react';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n// import { GoogleSignin } from '@react-native-google-signin/google-signin';\r\nimport * as Google from 'expo-google-app-auth';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport { GoogleSignin } from '@react-native-google-signin/google-signin';\r\n\r\n\r\nconst AppButton = ({ onPress, icon, title, backgroundColor, styleBack }) => (\r\n    <View style={styles.appButtonContainer}>\r\n      <Icon.Button\r\n        name={icon}\r\n        backgroundColor={backgroundColor}\r\n        onPress={onPress}\r\n        // style={styles.appButton}\r\n        style={styleBack}\r\n\r\n      >\r\n        <Text style={styles.appButtonText}>{title}</Text>\r\n      </Icon.Button>\r\n    </View>\r\n  );\r\n\r\nexport default function ({ navigation }) {\r\n    const [accessToken, setAccessToken] = React.useState();\r\n    const [userInfo, setUserInfo] = React.useState();\r\n\r\n    // const [request, response, promptAsync] = Google.useAuthRequest({\r\n\r\n    // })\r\n\r\n\r\n    async function signInWithGoogle() {\r\n      try {\r\n        const result = await Google.logInAsync({\r\n          webClientId:'227196084425-5e8po5oe7uoa5dk4staia1dgukmp58eq.apps.googleusercontent.com',\r\n          iosClient: '',\r\n          scopes: ['profile', 'email']\r\n        });\r\n        if(result.type === \"success\") {\r\n          setAccessToken(accessToken);\r\n        } else {\r\n          console.log(\"Permission denied\");\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n\r\n    async function getUserData() {\r\n\r\n    }\r\n\r\n\r\n    function showUserInfo() {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n      <View\r\n        style={{ \r\n            marginTop: 80,\r\n        }}\r\n      >\r\n        <View\r\n             style={{ \r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\"\r\n            }}\r\n        >\r\n        <Image\r\n              resizeMode=\"contain\"\r\n              style={{\r\n                height: 250,\r\n                width: 290,\r\n              }}\r\n              source={require(\"../../../assets/splash.png\")}\r\n            />\r\n        {/* <View\r\n            style={{ \r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: 200\r\n            }}\r\n        > */}\r\n        <View style={styles.screenContainer}>\r\n            <AppButton \r\n              icon=\"sign-in\" \r\n              title=\"Continue with Email\" \r\n              backgroundColor=\"#777\"\r\n              styleBack={styles.appButton} \r\n              onPress={() => { navigation.navigate(\"Register\");}}/>\r\n            <AppButton \r\n              icon=\"facebook\" \r\n              title=\"Continue with Facebook\" \r\n              backgroundColor=\"#3b5998\"\r\n              styleBack={styles.appButton2} \r\n              onPress={() => { navigation.navigate(\"Register\");}}/>\r\n            <AppButton \r\n                icon=\"google\" \r\n                title=\"Continue with Google\" \r\n                styleBack={styles.appButton3}\r\n                backgroundColor=\"#14191e\" onPress={\r\n                  accessToken ? getUserData : signInWithGoogle\r\n                }/>\r\n        </View>\r\n            \r\n        </View>\r\n        </View>\r\n      // </View>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    screenContainer: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: 120\r\n      },\r\n      appButton: {\r\n        padding: 16,\r\n        paddingLeft: 70,\r\n        paddingRight: 70,\r\n        borderRadius: 20,\r\n      },\r\n      appButton2: {\r\n        padding: 16,\r\n        paddingLeft: 60,\r\n        paddingRight: 60,\r\n        borderRadius: 20,\r\n      },\r\n      appButton3: {\r\n        padding: 16,\r\n        paddingLeft: 65,\r\n        paddingRight: 65,\r\n        borderRadius: 20,\r\n      },\r\n      appButtonText: {\r\n        fontSize: 15,\r\n        color: 'white'\r\n      },\r\n      appButtonContainer: {\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 26,\r\n      },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}