{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { Component, useState } from 'react';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport * as WebBrowser from 'expo-web-browser';\nimport { ResponseType } from 'expo-auth-session';\nimport * as Google from 'expo-auth-session/providers/google';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, signInWithCredential, signInWithPopup } from 'firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AppButton = function AppButton(_ref) {\n  var onPress = _ref.onPress,\n      icon = _ref.icon,\n      title = _ref.title,\n      backgroundColor = _ref.backgroundColor,\n      styleBack = _ref.styleBack;\n  return _jsx(View, {\n    style: styles.appButtonContainer,\n    children: _jsx(Icon.Button, {\n      name: icon,\n      backgroundColor: backgroundColor,\n      onPress: onPress,\n      style: styleBack,\n      children: _jsx(Text, {\n        style: styles.appButtonText,\n        children: title\n      })\n    })\n  });\n};\n\nWebBrowser.maybeCompleteAuthSession();\nexport default function (_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      accessToken = _React$useState2[0],\n      setAccessToken = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      userInfo = _React$useState4[0],\n      setUserInfo = _React$useState4[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _Google$useIdTokenAut = Google.useIdTokenAuthRequest({\n    clientId: '227196084425-5e8po5oe7uoa5dk4staia1dgukmp58eq.apps.googleusercontent.com'\n  }),\n      _Google$useIdTokenAut2 = _slicedToArray(_Google$useIdTokenAut, 3),\n      request = _Google$useIdTokenAut2[0],\n      response = _Google$useIdTokenAut2[1],\n      promptAsync = _Google$useIdTokenAut2[2];\n\n  function GoogleLogin() {\n    var auth, provider;\n    return _regeneratorRuntime.async(function GoogleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            auth = getAuth();\n            provider = new GoogleAuthProvider();\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(signInWithPopup(auth, provider).then(function (result) {\n              var credential = GoogleAuthProvider.credentialFromResult(result);\n              var token = credential.accessToken;\n              var user = result.user;\n            }).catch(function (error) {\n              setLoading(false);\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              var email = error.customData.email;\n              var credential = GoogleAuthProvider.credentialFromError(error);\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  React.useEffect(function () {\n    setLoading(true);\n\n    if ((response == null ? void 0 : response.type) === 'success') {\n      var id_token = response.params.id_token;\n      var auth = getAuth();\n      var provider = new GoogleAuthProvider();\n      var credential = provider.credential(id_token);\n      signInWithCredential(auth, credential);\n    }\n  }, [response]);\n  return _jsx(View, {\n    style: {\n      marginTop: 80\n    },\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(Image, {\n        resizeMode: \"contain\",\n        style: {\n          height: 250,\n          width: 290\n        },\n        source: require(\"../../../assets/splash.png\")\n      }), _jsxs(View, {\n        style: styles.screenContainer,\n        children: [_jsx(AppButton, {\n          icon: \"sign-in\",\n          title: \"Continue with Email\",\n          backgroundColor: \"#777\",\n          styleBack: styles.appButton,\n          onPress: function onPress() {\n            navigation.navigate(\"Register\");\n          }\n        }), _jsx(AppButton, {\n          icon: \"facebook\",\n          title: \"Continue with Facebook\",\n          backgroundColor: \"#3b5998\",\n          styleBack: styles.appButton2,\n          onPress: function onPress() {\n            navigation.navigate(\"Register\");\n          }\n        }), _jsx(AppButton, {\n          icon: \"google\",\n          title: \"Continue with Google\",\n          styleBack: styles.appButton3,\n          backgroundColor: \"#14191e\",\n          onPress: function onPress() {\n            GoogleLogin();\n          }\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 120\n  },\n  appButton: {\n    padding: 16,\n    paddingLeft: 70,\n    paddingRight: 70,\n    borderRadius: 20\n  },\n  appButton2: {\n    padding: 16,\n    paddingLeft: 60,\n    paddingRight: 60,\n    borderRadius: 20\n  },\n  appButton3: {\n    padding: 16,\n    paddingLeft: 65,\n    paddingRight: 65,\n    borderRadius: 20\n  },\n  appButtonText: {\n    fontSize: 15,\n    color: 'white'\n  },\n  appButtonContainer: {\n    paddingVertical: 10,\n    paddingHorizontal: 26\n  }\n});","map":{"version":3,"names":["React","Component","useState","Icon","WebBrowser","ResponseType","Google","initializeApp","getAuth","GoogleAuthProvider","signInWithCredential","signInWithPopup","AppButton","onPress","icon","title","backgroundColor","styleBack","styles","appButtonContainer","appButtonText","maybeCompleteAuthSession","navigation","accessToken","setAccessToken","userInfo","setUserInfo","loading","setLoading","useIdTokenAuthRequest","clientId","request","response","promptAsync","GoogleLogin","auth","provider","then","result","credential","credentialFromResult","token","user","catch","error","errorCode","code","errorMessage","message","email","customData","credentialFromError","useEffect","type","id_token","params","marginTop","flex","justifyContent","alignItems","height","width","require","screenContainer","appButton","navigate","appButton2","appButton3","StyleSheet","create","padding","paddingLeft","paddingRight","borderRadius","fontSize","color","paddingVertical","paddingHorizontal"],"sources":["C:/Users/MM/OneDrive/Desktop/Project/enkun/final-project/shenphen/nTwaste/src/screens/auth/Landing.js"],"sourcesContent":["import { Text, View, StyleSheet, Image, Button } from 'react-native'\r\nimport React, { Component, useState } from 'react';\r\n\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n// import { GoogleSignin } from '@react-native-google-signin/google-signin';\r\n// import * as Google from 'expo-google-app-auth';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport { ResponseType } from 'expo-auth-session';\r\nimport * as Google from 'expo-auth-session/providers/google';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth, GoogleAuthProvider, signInWithCredential, signInWithPopup } from 'firebase/auth';\r\n\r\nconst AppButton = ({ onPress, icon, title, backgroundColor, styleBack }) => (\r\n    <View style={styles.appButtonContainer}>\r\n      <Icon.Button\r\n        name={icon}\r\n        backgroundColor={backgroundColor}\r\n        onPress={onPress}\r\n        // style={styles.appButton}\r\n        style={styleBack}\r\n\r\n      >\r\n        <Text style={styles.appButtonText}>{title}</Text>\r\n      </Icon.Button>\r\n    </View>\r\n  );\r\n\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\nexport default function ({ navigation }) {\r\n    const [accessToken, setAccessToken] = React.useState();\r\n    const [userInfo, setUserInfo] = React.useState();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [request, response, promptAsync] = Google.useIdTokenAuthRequest(\r\n      {\r\n        clientId: '227196084425-5e8po5oe7uoa5dk4staia1dgukmp58eq.apps.googleusercontent.com',\r\n        },\r\n    );\r\n      \r\n    async function GoogleLogin() {\r\n      setLoading(true);\r\n      const auth = getAuth();\r\n      const provider = new GoogleAuthProvider();\r\n      await signInWithPopup(auth, provider)\r\n      .then((result) => {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        const token = credential.accessToken;\r\n        // The signed-in user info.\r\n        const user = result.user;\r\n        // ...\r\n      }).catch((error) => {\r\n        setLoading(false);\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        const email = error.customData.email;\r\n        // The AuthCredential type that was used.\r\n        const credential = GoogleAuthProvider.credentialFromError(error);\r\n        // ...\r\n      });\r\n    }\r\n    \r\n\r\n    React.useEffect(() => {\r\n      setLoading(true);\r\n      if (response?.type === 'success') {\r\n        const { id_token } = response.params;\r\n        \r\n        const auth = getAuth();\r\n        const provider = new GoogleAuthProvider();\r\n        const credential = provider.credential(id_token);\r\n        signInWithCredential(auth, credential);\r\n      }\r\n    }, [response]);\r\n  \r\n\r\n\r\n  \r\n\r\n    return (\r\n      <View\r\n        style={{ \r\n            marginTop: 80,\r\n        }}\r\n      >\r\n        <View\r\n             style={{ \r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\"\r\n            }}\r\n        >\r\n        <Image\r\n              resizeMode=\"contain\"\r\n              style={{\r\n                height: 250,\r\n                width: 290,\r\n              }}\r\n              source={require(\"../../../assets/splash.png\")}\r\n            />\r\n        {/* <View\r\n            style={{ \r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: 200\r\n            }}\r\n        > */}\r\n        <View style={styles.screenContainer}>\r\n            <AppButton \r\n              icon=\"sign-in\" \r\n              title=\"Continue with Email\" \r\n              backgroundColor=\"#777\"\r\n              styleBack={styles.appButton} \r\n              onPress={() => { navigation.navigate(\"Register\");}}/>\r\n            <AppButton \r\n              icon=\"facebook\" \r\n              title=\"Continue with Facebook\" \r\n              backgroundColor=\"#3b5998\"\r\n              styleBack={styles.appButton2} \r\n              onPress={() => { navigation.navigate(\"Register\");}}/>\r\n            <AppButton \r\n                icon=\"google\" \r\n                title=\"Continue with Google\" \r\n                styleBack={styles.appButton3}\r\n                backgroundColor=\"#14191e\" onPress={\r\n                  () => {\r\n                    GoogleLogin()\r\n                  }\r\n                }/>\r\n        </View>\r\n            \r\n        </View>\r\n        </View>\r\n      // </View>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    screenContainer: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: 120\r\n      },\r\n      appButton: {\r\n        padding: 16,\r\n        paddingLeft: 70,\r\n        paddingRight: 70,\r\n        borderRadius: 20,\r\n      },\r\n      appButton2: {\r\n        padding: 16,\r\n        paddingLeft: 60,\r\n        paddingRight: 60,\r\n        borderRadius: 20,\r\n      },\r\n      appButton3: {\r\n        padding: 16,\r\n        paddingLeft: 65,\r\n        paddingRight: 65,\r\n        borderRadius: 20,\r\n      },\r\n      appButtonText: {\r\n        fontSize: 15,\r\n        color: 'white'\r\n      },\r\n      appButtonContainer: {\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 26,\r\n      },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}