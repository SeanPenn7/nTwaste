{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport { Text } from \"react-native-rapi-ui\";\nimport AppNavigator from \"./src/navigation/AppNavigator\";\nimport { AuthProvider } from \"./src/provider/AuthProvider\";\nimport { ThemeProvider } from \"react-native-rapi-ui\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setIsLoading = _React$useState2[1];\n\n  var images = [require(\"./assets/icon.png\"), require(\"./assets/splash.png\"), require(\"./assets/login.png\"), require(\"./assets/register.png\"), require(\"./assets/forget.png\")];\n  React.useEffect(function () {\n    function prepare() {\n      return _regeneratorRuntime.async(function prepare$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(SplashScreen.preventAutoHideAsync());\n\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(func.loadAssetsAsync());\n\n            case 5:\n              _context.next = 9;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 9:\n              _context.prev = 9;\n              setIsLoading(false);\n              return _context.finish(9);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7, 9, 12]], Promise);\n    }\n\n    prepare();\n  }, []);\n  React.useEffect(function () {\n    if (isLoading === false) {\n      var hideSplash = function hideSplash() {\n        return _regeneratorRuntime.async(function hideSplash$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", SplashScreen.hideAsync());\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      hideSplash();\n    }\n  }, [isLoading]);\n\n  if (isLoading) {\n    return null;\n  }\n\n  React.useEffect(function () {\n    LogBox.ignoreLogs([\"AsyncStorage has been extracted from react-native core and will be removed in a future release. It can now be installed and imported from '@react-native-async-storage/async-storage' instead of 'react-native'. See https://github.com/react-native-async-storage/async-storage\"]);\n  }, []);\n  return _jsx(ThemeProvider, {\n    images: images,\n    children: _jsx(AuthProvider, {\n      children: _jsx(AppNavigator, {})\n    })\n  });\n}","map":{"version":3,"names":["React","Text","AppNavigator","AuthProvider","ThemeProvider","SplashScreen","App","props","useState","isLoading","setIsLoading","images","require","useEffect","prepare","preventAutoHideAsync","func","loadAssetsAsync","hideSplash","hideAsync","LogBox","ignoreLogs"],"sources":["C:/Users/MM/OneDrive/Desktop/Project/enkun/final-project/shenphen/nTwaste/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { Text } from \"react-native-rapi-ui\";\r\nimport AppNavigator from \"./src/navigation/AppNavigator\";\r\nimport { AuthProvider } from \"./src/provider/AuthProvider\";\r\nimport { ThemeProvider } from \"react-native-rapi-ui\";\r\nimport { LogBox } from \"react-native\";\r\nimport * as SplashScreen from 'expo-splash-screen';\r\n\r\n\r\nexport default function App(props) {\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n\r\n\r\n  const images = [\r\n    require(\"./assets/icon.png\"),\r\n    require(\"./assets/splash.png\"),\r\n    require(\"./assets/login.png\"),\r\n    require(\"./assets/register.png\"),\r\n    require(\"./assets/forget.png\"),\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    async function prepare() {\r\n      try {\r\n        // keeps the splash screen visible while assets are cached\r\n        await SplashScreen.preventAutoHideAsync();\r\n\r\n        // pre-load/cache assets: images, fonts, and videos\r\n        await func.loadAssetsAsync();\r\n      } catch (e) {\r\n        // console.warn(e);\r\n      } finally {\r\n        // loading is complete\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    prepare();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // when loading is complete\r\n    if (isLoading === false) {\r\n      // hide splash function\r\n      const hideSplash = async () => SplashScreen.hideAsync();\r\n\r\n      // hide splash screen to show app\r\n      hideSplash();\r\n    }\r\n  }, [isLoading]);\r\n\r\n  if (isLoading) {\r\n    return null;\r\n  }\r\n\r\n  // Ignore firebase v9 AsyncStorage warning\r\n  React.useEffect(() => {\r\n    LogBox.ignoreLogs([\r\n      \"AsyncStorage has been extracted from react-native core and will be removed in a future release. It can now be installed and imported from '@react-native-async-storage/async-storage' instead of 'react-native'. See https://github.com/react-native-async-storage/async-storage\",\r\n    ]);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider images={images}>\r\n      <AuthProvider>\r\n        <AppNavigator />\r\n      </AuthProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,OAAOC,YAAP;AACA,SAASC,YAAT;AACA,SAASC,aAAT,QAA8B,sBAA9B;;AAEA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;;AAGA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;EACjC,sBAAkCP,KAAK,CAACQ,QAAN,CAAe,IAAf,CAAlC;EAAA;EAAA,IAAOC,SAAP;EAAA,IAAkBC,YAAlB;;EAGA,IAAMC,MAAM,GAAG,CACbC,OAAO,qBADM,EAEbA,OAAO,uBAFM,EAGbA,OAAO,sBAHM,EAIbA,OAAO,yBAJM,EAKbA,OAAO,uBALM,CAAf;EAQAZ,KAAK,CAACa,SAAN,CAAgB,YAAM;IACpB,SAAeC,OAAf;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,iCAGUT,YAAY,CAACU,oBAAb,EAHV;;YAAA;cAAA;cAAA,iCAMUC,IAAI,CAACC,eAAL,EANV;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAWIP,YAAY,CAAC,KAAD,CAAZ;cAXJ;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IAeAI,OAAO;EACR,CAjBD,EAiBG,EAjBH;EAmBAd,KAAK,CAACa,SAAN,CAAgB,YAAM;IAEpB,IAAIJ,SAAS,KAAK,KAAlB,EAAyB;MAEvB,IAAMS,UAAU,GAAG,SAAbA,UAAa;QAAA;UAAA;YAAA;cAAA;gBAAA,kCAAYb,YAAY,CAACc,SAAb,EAAZ;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAnB;;MAGAD,UAAU;IACX;EACF,CATD,EASG,CAACT,SAAD,CATH;;EAWA,IAAIA,SAAJ,EAAe;IACb,OAAO,IAAP;EACD;;EAGDT,KAAK,CAACa,SAAN,CAAgB,YAAM;IACpBO,MAAM,CAACC,UAAP,CAAkB,CAChB,kRADgB,CAAlB;EAGD,CAJD,EAIG,EAJH;EAMA,OACE,KAAC,aAAD;IAAe,MAAM,EAAEV,MAAvB;IAAA,UACE,KAAC,YAAD;MAAA,UACE,KAAC,YAAD;IADF;EADF,EADF;AAOD"},"metadata":{},"sourceType":"module"}